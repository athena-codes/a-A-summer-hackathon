const { db } = require('../firebase/firebaseConfig');
const { collection, addDoc, getDocs, updateDoc, getDoc, doc, query, where, deleteDoc } = require('firebase/firestore');

//get all questions generated by ai by user_id
const getQuestionsByUserIdFromDB = async (uid) => {
    console.log("checking if i am hitting getQuestionsFromDB: ")
    try {
        // Reference to the ai_generated_requests subcollection
        const aiGeneratedRequestsRef = collection(db, 'users', 'reference', 'ai_generated_requests');

        // Get the documents
        const aiGeneratedRequestsSnapshot = await getDocs(aiGeneratedRequestsRef);

        // Extract the data from the documents
        const aiGeneratedRequestsData = aiGeneratedRequestsSnapshot.docs.map(doc => doc.data());

        const userAllQuestions = [];
        aiGeneratedRequestsData.forEach(doc => {
            userAllQuestions.push(doc.question);
        });

        console.log("userAllQuestions: ", userAllQuestions)
        return userAllQuestions;

    } catch (error) {
        throw new Error('Error adding question: ' + error.message);
    }

}


//ai generate question
const addQuestionsToDB = async (uid, aiData) => {
    console.log("checking if i am able hitting addQuestionsToDB: ", uid, aiData)

    try {
        const usersRef = doc(db, 'users', uid)
        // console.log("usersRef: ", usersRef)
        const aiGeneratedRequestsRef = collection(usersRef, "ai_generated_requests")
        // console.log("aiGeneratedRequestsRef: ", aiGeneratedRequestsRef)

        // //method 1- insert db 1 by 1
        // const docRef = await addDoc(aiGeneratedRequestsRef, aiData);

        //method 2- insert db with questionData
        const docRef = await addDoc(aiGeneratedRequestsRef, aiData);


    } catch (error) {
        throw new Error('DB-Error adding question: ' + error.message);
    }
}




module.exports = { addQuestionsToDB, getQuestionsByUserIdFromDB };
